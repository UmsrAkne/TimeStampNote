<Window
    x:Class="TimeStampNote.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:v="TimeStampNote.Views"
    Name="mainWindow"
    Title="{Binding Title}"
    Width="800"
    Height="600">

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="CustomStyleDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition />
            <RowDefinition Height="auto" />
        </Grid.RowDefinitions>

        <ContentControl prism:RegionManager.RegionName="ContentRegion" />
        <StackPanel Grid.Row="0" FocusManager.FocusedElement="{Binding ElementName=commandBox}">
            <Menu>
                <MenuItem Header="File">
                    <MenuItem Header="Exit" />
                </MenuItem>
                <MenuItem Header="Command">
                    <MenuItem Command="{Binding AddCommentCommand}" Header="Add" />
                    <MenuItem Command="{Binding AddGroupCommand}" Header="Add-Group" />
                    <MenuItem Header="edit &quot;subID&quot; " IsEnabled="False" />
                    <MenuItem Header="delete &quot;subID&quot;" IsEnabled="False" />
                    <MenuItem Command="{Binding ReverseOrderCommand}" Header="reverse-order" />

                    <MenuItem
                        Command="{Binding ToggleVisibilityCommand}"
                        CommandParameter="order-number"
                        Header="view order-number" />

                    <MenuItem
                        Command="{Binding ToggleVisibilityCommand}"
                        CommandParameter="id"
                        Header="view id" />

                    <MenuItem
                        Command="{Binding ToggleVisibilityCommand}"
                        CommandParameter="subid"
                        Header="view subid" />

                    <MenuItem
                        Command="{Binding ToggleVisibilityCommand}"
                        CommandParameter="date"
                        Header="view date" />
                </MenuItem>

                <MenuItem Header="Theme">
                    <MenuItem Command="{Binding ToLightThemeCommand}" Header="Light" />
                    <MenuItem Command="{Binding ToDarkThemeCommand}" Header="Dark" />
                </MenuItem>
            </Menu>

            <ComboBox ItemsSource="{Binding GroupNames}" SelectedItem="{Binding GroupName}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="DropDownOpened">
                        <i:InvokeCommandAction Command="{Binding ReloadGroupNamesCommand}" />
                    </i:EventTrigger>

                    <i:EventTrigger EventName="DropDownClosed">
                        <i:InvokeCommandAction Command="{Binding GetCommentCommand}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>

            <TextBox
                x:Name="commandBox"
                Padding="2,4"
                Background="{Binding UIColors.BackgroundColorBrush}"
                FontFamily="BIZ UDゴシック"
                FontSize="15"
                Foreground="{Binding UIColors.ForegroundColorBrush}"
                Text="{Binding CommandText, UpdateSourceTrigger=PropertyChanged}">

                <TextBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding ExecuteCommandCommand}" />
                </TextBox.InputBindings>
            </TextBox>

        </StackPanel>
        <ListView
            Grid.Row="1"
            AlternationCount="2"
            Background="{Binding UIColors.DeepBackgroundColorBrush}"
            ItemsSource="{Binding Comments}">

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ShowSelectionCommentCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

        </ListView>
        <StatusBar
            Grid.Row="2"
            Background="{Binding UIColors.BackgroundColorBrush}"
            Foreground="{Binding UIColors.ForegroundColorBrush}">
            <TextBlock Text="{Binding StatusBarText}" />
        </StatusBar>

    </Grid>
</Window>
